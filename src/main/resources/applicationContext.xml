<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>
	<bean id="user" name="user1" class="com.keeper.vo.User">
		<property name="userName" value="Hello world" />
		<property name="registerDate" value="2017-12-22" />
	</bean>
	<bean id="user2" name="user4" class="com.keeper.vo.User">
		<property name="userName" value="Hello world1" />
	</bean>
	<bean id="userDao" class="com.keeper.dao.impl.UserDaoImpl" />
	<bean class="com.keeper.dao.impl.User2DaoImpl" />
	<bean id="userGroup" class="com.keeper.vo.UserGroup">
		<property name="userList">
			<list value-type="com.keeper.vo.User">
				<ref bean="user" />
				<ref bean="user1" />
			</list>
		</property>
		<property name="users">
			<array>
				<ref bean="user" />
				<ref bean="user1" />
			</array>
		</property>
		<property name="map">
			<util:map map-class="java.util.LinkedHashMap">
				<entry key="1" value-ref="user"></entry>
			</util:map>
		</property>
	</bean>
	<bean id="editor" class="com.keeper.util.DateSupportEditor">
		<property name="format" value="yyyy-MM-dd" />
	</bean>
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<array>
				<bean class="com.keeper.util.DateEditorRegistrar">
					<property name="editor">
						<bean class="com.keeper.util.DateSupportEditor">
							<property name="format" value="${date.format}" />
						</bean>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<bean id="parent" class="com.keeper.vo.Parent">
		<property name="siteCode" value="BANK" />
	</bean>
	<bean id="user7" class="com.keeper.vo.User" parent="parent">
		<property name="password" value="123456" />
	</bean>
	<bean id="userParent" class="com.keeper.vo.User">
		<property name="password" value="1234567" />
	</bean>
	<bean id="user8" class="com.keeper.vo.User" parent="userParent">
		<property name="userName" value="administrator" />
	</bean>
	<bean id="user9" class="com.keeper.vo.User" init-method="init"
		destroy-method="destroy">
	</bean>
	<context:component-scan base-package="com.keeper.vo" />
	<bean id="userProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName" value="user" />
		<property name="interceptorNames">
			<array>
				<value>keepMethodBeforeAdvice</value>
			</array>
		</property>
	</bean>
	<bean id="keepMethodBeforeAdvice" class="com.keeper.aop.KeepMethodBeforeAdvice" />
	<bean id="keepAfterReturningAdvice" class="com.keeper.aop.KeepAfterReturningAdvice" />
	<bean id="keepMethodInterceptor" class="com.keeper.aop.KeepMethodInterceptor" />

	<bean id="userProxy1" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName" value="user" />
		<property name="interceptorNames">
			<array>
				<value>keepAfterReturningAdvice</value>
			</array>
		</property>
	</bean>
	<bean id="keepThrowsAdvice" class="com.keeper.aop.KeepThrowsAdvice" />
	<bean id="userProxy2" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName" value="user" />
		<property name="interceptorNames">
			<array>
				<value>keepThrowsAdvice</value>
			</array>
		</property>
	</bean>
	<bean id="userProxy3" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName" value="user" />
		<property name="interceptorNames">
			<array>
				<value>keepMethodInterceptor</value>
			</array>
		</property>
	</bean>

	<bean class="com.keeper.aop.KeepAspect" id="keepAspect" />
	<aop:config>
		<aop:aspect ref="keepAspect">
			<aop:pointcut expression="execution(* com.keeper.dao.impl.*.insert(..))"
				id="keepPointcut" />
			<aop:before method="before" pointcut-ref="keepPointcut" />
			<aop:after method="after" pointcut-ref="keepPointcut" />
			<aop:after-returning method="afterReturning"
				pointcut-ref="keepPointcut" returning="returnObj" />
			<aop:after-throwing method="afterThrowing"
				pointcut-ref="keepPointcut" throwing="ex" />
			<aop:around method="around" pointcut-ref="keepPointcut" />
		</aop:aspect>
	</aop:config>
	<bean id="xmlConvert" class="com.keeper.util.XmlConvert">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
	</bean>
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<property name="mappingLocation" value="classpath:mapping.xml" />
	</bean>
	<!-- <aop:aspectj-autoproxy/> <bean id="keepAspectAnnotation" class="com.keeper.aop.KeepAspectAnnotation"/> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="a" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	</bean>
	<bean id="groupDao" class="com.keeper.dao.impl.GroupDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.sina.com" />
		<property name="username" value="xyzmmtt@sina.com" />
		<property name="password" value="a123456789" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	<bean id="email" class="com.keeper.mail.Email">
		<property name="sender" ref="sender"/>
	</bean>
</beans>